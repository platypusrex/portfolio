# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

"Represents a binary file in a space. An asset can be any file type."
type Asset {
  contentType: String
  contentfulMetadata: ContentfulMetadata!
  description: String
  fileName: String
  height: Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size: Int
  sys: Sys!
  title: String
  url(transform: ImageTransformOptions): String
  width: Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

type AssetLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageCollection
  practicePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PracticePageCollection
}

"Contact information (ie: name, city, number, ect). [See type definition](https://app.contentful.com/spaces/85rjnv4kkg6i/content_types/contactInfo)"
type ContactInfo implements Entry {
  city(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  email(locale: String): String
  fullName(locale: String): String
  linkedFrom(allowedLocales: [String]): ContactInfoLinkingCollections
  name(locale: String): String
  phone(locale: String): String
  state(locale: String): String
  sys: Sys!
}

type ContactInfoCollection {
  items: [ContactInfo]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ContactInfoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageCollection
  practicePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PracticePageCollection
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

"""

Represents a tag entity for finding and organizing content easily.
Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

"Primary site navigation link. [See type definition](https://app.contentful.com/spaces/85rjnv4kkg6i/content_types/navLink)"
type NavLink implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  href(locale: String): String
  icon(locale: String): String
  linkedFrom(allowedLocales: [String]): NavLinkLinkingCollections
  name(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type NavLinkCollection {
  items: [NavLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

type NavLinkLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageCollection
  practicePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PracticePageCollection
}

"Portfolio site page. [See type definition](https://app.contentful.com/spaces/85rjnv4kkg6i/content_types/page)"
type Page implements Entry {
  contactInfo(locale: String, preview: Boolean): ContactInfo
  content(locale: String): PageContent
  contentfulMetadata: ContentfulMetadata!
  hero(locale: String, preview: Boolean): Asset
  heroMobile(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): PageLinkingCollections
  name(locale: String): String
  navLinksCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageNavLinksCollection
  pageHeader(locale: String, preview: Boolean): PageHeader
  resumeSectionsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageResumeSectionsCollection
  socialLinksCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageSocialLinksCollection
  sys: Sys!
}

type PageCollection {
  items: [Page]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageContent {
  json: JSON!
  links: PageContentLinks!
}

type PageContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageContentLinks {
  assets: PageContentAssets!
  entries: PageContentEntries!
}

"The main heading and description for a page. [See type definition](https://app.contentful.com/spaces/85rjnv4kkg6i/content_types/pageHeader)"
type PageHeader implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): PageHeaderDescription
  linkedFrom(allowedLocales: [String]): PageHeaderLinkingCollections
  name(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type PageHeaderCollection {
  items: [PageHeader]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageHeaderDescription {
  json: JSON!
  links: PageHeaderDescriptionLinks!
}

type PageHeaderDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageHeaderDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageHeaderDescriptionLinks {
  assets: PageHeaderDescriptionAssets!
  entries: PageHeaderDescriptionEntries!
}

type PageHeaderLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageCollection
  practicePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PracticePageCollection
}

type PageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type PageNavLinksCollection {
  items: [NavLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageResumeSectionsCollection {
  items: [ResumeSection]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageSocialLinksCollection {
  items: [SocialLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

"Portfolio site page. [See type definition](https://app.contentful.com/spaces/85rjnv4kkg6i/content_types/practicePage)"
type PracticePage implements Entry {
  contactInfo(locale: String, preview: Boolean): ContactInfo
  content(locale: String): PracticePageContent
  contentfulMetadata: ContentfulMetadata!
  hero(locale: String, preview: Boolean): Asset
  heroMobile(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): PracticePageLinkingCollections
  name(locale: String): String
  navLinksCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PracticePageNavLinksCollection
  pageHeader(locale: String, preview: Boolean): PageHeader
  resumeSectionsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PracticePageResumeSectionsCollection
  socialLinksCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PracticePageSocialLinksCollection
  sys: Sys!
}

type PracticePageCollection {
  items: [PracticePage]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PracticePageContent {
  json: JSON!
  links: PracticePageContentLinks!
}

type PracticePageContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PracticePageContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PracticePageContentLinks {
  assets: PracticePageContentAssets!
  entries: PracticePageContentEntries!
}

type PracticePageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type PracticePageNavLinksCollection {
  items: [NavLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PracticePageResumeSectionsCollection {
  items: [ResumeSection]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PracticePageSocialLinksCollection {
  items: [SocialLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

type Query {
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  contactInfo(id: String!, locale: String, preview: Boolean): ContactInfo
  contactInfoCollection(limit: Int = 100, locale: String, order: [ContactInfoOrder], preview: Boolean, skip: Int = 0, where: ContactInfoFilter): ContactInfoCollection
  navLink(id: String!, locale: String, preview: Boolean): NavLink
  navLinkCollection(limit: Int = 100, locale: String, order: [NavLinkOrder], preview: Boolean, skip: Int = 0, where: NavLinkFilter): NavLinkCollection
  page(id: String!, locale: String, preview: Boolean): Page
  pageCollection(limit: Int = 100, locale: String, order: [PageOrder], preview: Boolean, skip: Int = 0, where: PageFilter): PageCollection
  pageHeader(id: String!, locale: String, preview: Boolean): PageHeader
  pageHeaderCollection(limit: Int = 100, locale: String, order: [PageHeaderOrder], preview: Boolean, skip: Int = 0, where: PageHeaderFilter): PageHeaderCollection
  practicePage(id: String!, locale: String, preview: Boolean): PracticePage
  practicePageCollection(limit: Int = 100, locale: String, order: [PracticePageOrder], preview: Boolean, skip: Int = 0, where: PracticePageFilter): PracticePageCollection
  resumeSection(id: String!, locale: String, preview: Boolean): ResumeSection
  resumeSectionCollection(limit: Int = 100, locale: String, order: [ResumeSectionOrder], preview: Boolean, skip: Int = 0, where: ResumeSectionFilter): ResumeSectionCollection
  resumeSectionContent(id: String!, locale: String, preview: Boolean): ResumeSectionContent
  resumeSectionContentCollection(limit: Int = 100, locale: String, order: [ResumeSectionContentOrder], preview: Boolean, skip: Int = 0, where: ResumeSectionContentFilter): ResumeSectionContentCollection
  socialLink(id: String!, locale: String, preview: Boolean): SocialLink
  socialLinkCollection(limit: Int = 100, locale: String, order: [SocialLinkOrder], preview: Boolean, skip: Int = 0, where: SocialLinkFilter): SocialLinkCollection
}

"[See type definition](https://app.contentful.com/spaces/85rjnv4kkg6i/content_types/resumeSection)"
type ResumeSection implements Entry {
  contentCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ResumeSectionContentCollection
  contentfulMetadata: ContentfulMetadata!
  heading(locale: String): String
  linkedFrom(allowedLocales: [String]): ResumeSectionLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type ResumeSectionCollection {
  items: [ResumeSection]!
  limit: Int!
  skip: Int!
  total: Int!
}

"[See type definition](https://app.contentful.com/spaces/85rjnv4kkg6i/content_types/resumeSectionContent)"
type ResumeSectionContent implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  descriptionList(locale: String): [String]
  heading(locale: String): String
  linkedFrom(allowedLocales: [String]): ResumeSectionContentLinkingCollections
  name(locale: String): String
  subHeading(locale: String): String
  sys: Sys!
}

type ResumeSectionContentCollection {
  items: [ResumeSectionContent]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ResumeSectionContentLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  resumeSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ResumeSectionCollection
}

type ResumeSectionLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageCollection
  practicePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PracticePageCollection
}

"Social button link with related iconography. [See type definition](https://app.contentful.com/spaces/85rjnv4kkg6i/content_types/socialLink)"
type SocialLink implements Entry {
  contentfulMetadata: ContentfulMetadata!
  href(locale: String): String
  icon(locale: String): String
  linkedFrom(allowedLocales: [String]): SocialLinkLinkingCollections
  name(locale: String): String
  sys: Sys!
  target(locale: String): String
}

type SocialLinkCollection {
  items: [SocialLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

type SocialLinkLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageCollection
  practicePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PracticePageCollection
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

enum ContactInfoOrder {
  city_ASC
  city_DESC
  email_ASC
  email_DESC
  fullName_ASC
  fullName_DESC
  name_ASC
  name_DESC
  phone_ASC
  phone_DESC
  state_ASC
  state_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageFormat {
  "JPG image format."
  JPG
  """

  Progressive JPG format stores multiple passes of an image in progressively higher detail.
  When a progressive image is loading, the viewer will first see a lower quality pixelated version which
  will gradually improve in detail, until the image is fully downloaded. This is to display an image as
  early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE
  "PNG image format"
  PNG
  """

  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
  The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8
  "WebP image format."
  WEBP
}

enum ImageResizeFocus {
  "Focus the resizing on the bottom."
  BOTTOM
  "Focus the resizing on the bottom left."
  BOTTOM_LEFT
  "Focus the resizing on the bottom right."
  BOTTOM_RIGHT
  "Focus the resizing on the center."
  CENTER
  "Focus the resizing on the largest face."
  FACE
  "Focus the resizing on the area containing all the faces."
  FACES
  "Focus the resizing on the left."
  LEFT
  "Focus the resizing on the right."
  RIGHT
  "Focus the resizing on the top."
  TOP
  "Focus the resizing on the top left."
  TOP_LEFT
  "Focus the resizing on the top right."
  TOP_RIGHT
}

enum ImageResizeStrategy {
  "Crops a part of the original image to fit into the specified dimensions."
  CROP
  "Resizes the image to the specified dimensions, cropping the image if needed."
  FILL
  "Resizes the image to fit into the specified dimensions."
  FIT
  """

  Resizes the image to the specified dimensions, padding the image if needed.
  Uses desired background color as padding color.
  """
  PAD
  "Resizes the image to the specified dimensions, changing the original aspect ratio if needed."
  SCALE
  "Creates a thumbnail from the image."
  THUMB
}

enum NavLinkOrder {
  description_ASC
  description_DESC
  href_ASC
  href_DESC
  icon_ASC
  icon_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum PageHeaderOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum PageOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PracticePageOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ResumeSectionContentOrder {
  heading_ASC
  heading_DESC
  name_ASC
  name_DESC
  subHeading_ASC
  subHeading_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ResumeSectionOrder {
  heading_ASC
  heading_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum SocialLinkOrder {
  href_ASC
  href_DESC
  icon_ASC
  icon_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  target_ASC
  target_DESC
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

input ContactInfoFilter {
  AND: [ContactInfoFilter]
  OR: [ContactInfoFilter]
  city: String
  city_contains: String
  city_exists: Boolean
  city_in: [String]
  city_not: String
  city_not_contains: String
  city_not_in: [String]
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  fullName: String
  fullName_contains: String
  fullName_exists: Boolean
  fullName_in: [String]
  fullName_not: String
  fullName_not_contains: String
  fullName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  phone: String
  phone_contains: String
  phone_exists: Boolean
  phone_in: [String]
  phone_not: String
  phone_not_contains: String
  phone_not_in: [String]
  state: String
  state_contains: String
  state_exists: Boolean
  state_in: [String]
  state_not: String
  state_not_contains: String
  state_not_in: [String]
  sys: SysFilter
}

input ImageTransformOptions {
  """

  Desired background color, used with corner radius or `PAD` resize strategy.
  Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor
  """

  Desired corner radius in pixels.
  Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
  Defaults to `0`. Uses desired background color as padding color,
  unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int
  "Desired image format. Defaults to the original image format."
  format: ImageFormat
  "Desired height in pixels. Defaults to the original image height."
  height: Dimension
  """

  Desired quality of the image in percents.
  Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality
  "Desired resize focus area. Defaults to `CENTER`."
  resizeFocus: ImageResizeFocus
  "Desired resize strategy. Defaults to `FIT`."
  resizeStrategy: ImageResizeStrategy
  "Desired width in pixels. Defaults to the original image width."
  width: Dimension
}

input NavLinkFilter {
  AND: [NavLinkFilter]
  OR: [NavLinkFilter]
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  href: String
  href_contains: String
  href_exists: Boolean
  href_in: [String]
  href_not: String
  href_not_contains: String
  href_not_in: [String]
  icon: String
  icon_contains: String
  icon_exists: Boolean
  icon_in: [String]
  icon_not: String
  icon_not_contains: String
  icon_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input PageFilter {
  AND: [PageFilter]
  OR: [PageFilter]
  contactInfo: cfContactInfoNestedFilter
  contactInfo_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  heroMobile_exists: Boolean
  hero_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  navLinksCollection_exists: Boolean
  pageHeader: cfPageHeaderNestedFilter
  pageHeader_exists: Boolean
  resumeSectionsCollection_exists: Boolean
  socialLinksCollection_exists: Boolean
  sys: SysFilter
}

input PageHeaderFilter {
  AND: [PageHeaderFilter]
  OR: [PageHeaderFilter]
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input PracticePageFilter {
  AND: [PracticePageFilter]
  OR: [PracticePageFilter]
  contactInfo: cfContactInfoNestedFilter
  contactInfo_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  heroMobile_exists: Boolean
  hero_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  navLinksCollection_exists: Boolean
  pageHeader: cfPageHeaderNestedFilter
  pageHeader_exists: Boolean
  resumeSectionsCollection_exists: Boolean
  socialLinksCollection_exists: Boolean
  sys: SysFilter
}

input ResumeSectionContentFilter {
  AND: [ResumeSectionContentFilter]
  OR: [ResumeSectionContentFilter]
  description: String
  descriptionList_contains_all: [String]
  descriptionList_contains_none: [String]
  descriptionList_contains_some: [String]
  descriptionList_exists: Boolean
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  heading: String
  heading_contains: String
  heading_exists: Boolean
  heading_in: [String]
  heading_not: String
  heading_not_contains: String
  heading_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  subHeading: String
  subHeading_contains: String
  subHeading_exists: Boolean
  subHeading_in: [String]
  subHeading_not: String
  subHeading_not_contains: String
  subHeading_not_in: [String]
  sys: SysFilter
}

input ResumeSectionFilter {
  AND: [ResumeSectionFilter]
  OR: [ResumeSectionFilter]
  contentCollection_exists: Boolean
  heading: String
  heading_contains: String
  heading_exists: Boolean
  heading_in: [String]
  heading_not: String
  heading_not_contains: String
  heading_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

input SocialLinkFilter {
  AND: [SocialLinkFilter]
  OR: [SocialLinkFilter]
  href: String
  href_contains: String
  href_exists: Boolean
  href_in: [String]
  href_not: String
  href_not_contains: String
  href_not_in: [String]
  icon: String
  icon_contains: String
  icon_exists: Boolean
  icon_in: [String]
  icon_not: String
  icon_not_contains: String
  icon_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
  target: String
  target_contains: String
  target_exists: Boolean
  target_in: [String]
  target_not: String
  target_not_contains: String
  target_not_in: [String]
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

input cfContactInfoNestedFilter {
  AND: [cfContactInfoNestedFilter]
  OR: [cfContactInfoNestedFilter]
  city: String
  city_contains: String
  city_exists: Boolean
  city_in: [String]
  city_not: String
  city_not_contains: String
  city_not_in: [String]
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  fullName: String
  fullName_contains: String
  fullName_exists: Boolean
  fullName_in: [String]
  fullName_not: String
  fullName_not_contains: String
  fullName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  phone: String
  phone_contains: String
  phone_exists: Boolean
  phone_in: [String]
  phone_not: String
  phone_not_contains: String
  phone_not_in: [String]
  state: String
  state_contains: String
  state_exists: Boolean
  state_in: [String]
  state_not: String
  state_not_contains: String
  state_not_in: [String]
  sys: SysFilter
}

input cfPageHeaderNestedFilter {
  AND: [cfPageHeaderNestedFilter]
  OR: [cfPageHeaderNestedFilter]
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
compliant with the 'date-time' format outlined in section 5.6 of
the RFC 3339 profile of the ISO 8601 standard for representation
of dates and times using the Gregorian calendar.
"""
scalar DateTime

"The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`."
scalar Dimension

"The 'Quality' type represents quality as whole numeric values between `1` and `100`."
scalar Quality

"The 'HexColor' type represents color in `rgb:ffffff` string format."
scalar HexColor

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
